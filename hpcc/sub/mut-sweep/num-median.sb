#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########

#SBATCH --time=4:00:00            # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-300
#SBATCH --mem=4G                    # memory required per node - amount of memory (in bytes)
#SBATCH --job-name num-med         # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab

########## Command Lines to Run ##########

DATA_DIR=/mnt/scratch/lalejini/data/tag-based-mem/mut-sweep
CONFIG_DIR=/mnt/scratch/lalejini/data/tag-based-mem/config
EXAMPLES_DIR=/mnt/home/lalejini/devo_ws/gp-tag-accessed-memory/data/prog-synth-examples

##################################
# Setup random seed info
PROBLEM_SEED_OFFSET=1500
SEED=$((SLURM_ARRAY_TASK_ID + PROBLEM_SEED_OFFSET))

##################################
# Problem-specific configuration
PROBLEM=median
MAX_PROG_SIZE=64
PROG_EVAL_TIME=64
GENERATIONS=300

MUT_RATE_5=5
MUT_RATE_1=1
MUT_RATE_01=01
MUT_RATE_001=001
MUT_RATE_0001=0001
MUT_RATE_00001=00001

##################################
# A few utility variables
PROGRAM_ARGUMENT_MODE__TAG_ONLY=0
PROGRAM_ARGUMENT_MODE__NUM_ONLY=1
PROGRAM_ARGUMENT_MODE__TAG_AND_NUM=2

##################################
# Setup general configuration
BENCHMARK_DATA_DIR=${EXAMPLES_DIR}
SNAPSHOT_INTERVAL=${GENERATIONS}
SUMMARY_STATS_INTERVAL=100

ARG_MODE_NAME=NUM
PROGRAM_ARGUMENT_MODE=${PROGRAM_ARGUMENT_MODE__NUM_ONLY}
PROGRAM_ARGUMENTS_TYPE_SEARCH=0

PROG_POP_SIZE=1000
USE_MODULES=0

PROG_MUT__PER_INST_SUB=0.001
PROG_MUT__PER_INST_INS=0.001
PROG_MUT__PER_INST_DEL=0.001
PROG_MUT__PER_PROG_SLIP=0.00
PROG_MUT__PER_MOD_DUP=0.00
PROG_MUT__PER_MOD_DEL=0.00

###### Treatments #######

TREATMENT__MUT_RATE_1__MIN=1
TREATMENT__MUT_RATE_1__MAX=50

TREATMENT__MUT_RATE_01__MIN=51
TREATMENT__MUT_RATE_01__MAX=100

TREATMENT__MUT_RATE_001__MIN=101
TREATMENT__MUT_RATE_001__MAX=150

TREATMENT__MUT_RATE_0001__MIN=151
TREATMENT__MUT_RATE_0001__MAX=200

TREATMENT__MUT_RATE_00001__MIN=201
TREATMENT__MUT_RATE_00001__MAX=250

TREATMENT__MUT_RATE_5__MIN=251
TREATMENT__MUT_RATE_5__MAX=300

####################################################################

if [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MUT_RATE_1__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MUT_RATE_1__MAX} ] ; then
  MUT_RATE=${MUT_RATE_1}
  PROG_MUT__PER_BIT_FLIP=0.${MUT_RATE}
  PROG_MUT__PER_NUMERIC_ARG_SUB=0.${MUT_RATE}
  NAME=ARGS_${ARG_MODE_NAME}__MUT_${MUT_RATE}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MUT_RATE_5__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MUT_RATE_5__MAX} ] ; then
  MUT_RATE=${MUT_RATE_5}
  PROG_MUT__PER_BIT_FLIP=0.${MUT_RATE}
  PROG_MUT__PER_NUMERIC_ARG_SUB=0.${MUT_RATE}
  NAME=ARGS_${ARG_MODE_NAME}__MUT_${MUT_RATE}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MUT_RATE_01__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MUT_RATE_01__MAX} ] ; then
  MUT_RATE=${MUT_RATE_01}
  PROG_MUT__PER_BIT_FLIP=0.${MUT_RATE}
  PROG_MUT__PER_NUMERIC_ARG_SUB=0.${MUT_RATE}
  NAME=ARGS_${ARG_MODE_NAME}__MUT_${MUT_RATE}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MUT_RATE_001__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MUT_RATE_001__MAX} ] ; then
  MUT_RATE=${MUT_RATE_001}
  PROG_MUT__PER_BIT_FLIP=0.${MUT_RATE}
  PROG_MUT__PER_NUMERIC_ARG_SUB=0.${MUT_RATE}
  NAME=ARGS_${ARG_MODE_NAME}__MUT_${MUT_RATE}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MUT_RATE_0001__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MUT_RATE_0001__MAX} ] ; then
  MUT_RATE=${MUT_RATE_0001}
  PROG_MUT__PER_BIT_FLIP=0.${MUT_RATE}
  PROG_MUT__PER_NUMERIC_ARG_SUB=0.${MUT_RATE}
  NAME=ARGS_${ARG_MODE_NAME}__MUT_${MUT_RATE}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MUT_RATE_00001__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MUT_RATE_00001__MAX} ] ; then
  MUT_RATE=${MUT_RATE_00001}
  PROG_MUT__PER_BIT_FLIP=0.${MUT_RATE}
  PROG_MUT__PER_NUMERIC_ARG_SUB=0.${MUT_RATE}
  NAME=ARGS_${ARG_MODE_NAME}__MUT_${MUT_RATE}

else
  echo "${SEED} from ${PROBLEM} (${NAME}) failed to launch" >> /mnt/home/lalejini/failtolaunch.txt

fi

####################################################################

RUN_NAME=PROBLEM_${PROBLEM}__${NAME}__${SEED}
RUN_DIR=${DATA_DIR}/${RUN_NAME}

# Make run directory
mkdir -p ${RUN_DIR}

cd ${RUN_DIR}

cp -R ${CONFIG_DIR}/* .

echo "./prog_synth -SEED ${SEED} -PROBLEM ${PROBLEM} -GENERATIONS ${GENERATIONS} -MAX_PROG_SIZE ${MAX_PROG_SIZE} -PROG_EVAL_TIME ${PROG_EVAL_TIME} -PROG_MUT__PER_BIT_FLIP ${PROG_MUT__PER_BIT_FLIP} -PROG_MUT__PER_NUMERIC_ARG_SUB ${PROG_MUT__PER_NUMERIC_ARG_SUB} -BENCHMARK_DATA_DIR ${BENCHMARK_DATA_DIR} -SNAPSHOT_INTERVAL ${SNAPSHOT_INTERVAL} -SUMMARY_STATS_INTERVAL ${SUMMARY_STATS_INTERVAL} -PROG_POP_SIZE ${PROG_POP_SIZE} -USE_MODULES ${USE_MODULES} -PROG_MUT__PER_INST_SUB ${PROG_MUT__PER_INST_SUB} -PROG_MUT__PER_INST_INS ${PROG_MUT__PER_INST_INS} -PROG_MUT__PER_INST_DEL ${PROG_MUT__PER_INST_DEL} -PROG_MUT__PER_PROG_SLIP ${PROG_MUT__PER_PROG_SLIP} -PROG_MUT__PER_MOD_DUP ${PROG_MUT__PER_MOD_DUP} -PROG_MUT__PER_MOD_DEL ${PROG_MUT__PER_MOD_DEL} -PROGRAM_ARGUMENT_MODE ${PROGRAM_ARGUMENT_MODE} -PROGRAM_ARGUMENTS_TYPE_SEARCH ${PROGRAM_ARGUMENTS_TYPE_SEARCH} > run.log" > ./cmd.txt

./prog_synth -SEED ${SEED} -PROBLEM ${PROBLEM} -GENERATIONS ${GENERATIONS} -MAX_PROG_SIZE ${MAX_PROG_SIZE} -PROG_EVAL_TIME ${PROG_EVAL_TIME} -PROG_MUT__PER_BIT_FLIP ${PROG_MUT__PER_BIT_FLIP} -PROG_MUT__PER_NUMERIC_ARG_SUB ${PROG_MUT__PER_NUMERIC_ARG_SUB} -BENCHMARK_DATA_DIR ${BENCHMARK_DATA_DIR} -SNAPSHOT_INTERVAL ${SNAPSHOT_INTERVAL} -SUMMARY_STATS_INTERVAL ${SUMMARY_STATS_INTERVAL} -PROG_POP_SIZE ${PROG_POP_SIZE} -USE_MODULES ${USE_MODULES} -PROG_MUT__PER_INST_SUB ${PROG_MUT__PER_INST_SUB} -PROG_MUT__PER_INST_INS ${PROG_MUT__PER_INST_INS} -PROG_MUT__PER_INST_DEL ${PROG_MUT__PER_INST_DEL} -PROG_MUT__PER_PROG_SLIP ${PROG_MUT__PER_PROG_SLIP} -PROG_MUT__PER_MOD_DUP ${PROG_MUT__PER_MOD_DUP} -PROG_MUT__PER_MOD_DEL ${PROG_MUT__PER_MOD_DEL} -PROGRAM_ARGUMENT_MODE ${PROGRAM_ARGUMENT_MODE} -PROGRAM_ARGUMENTS_TYPE_SEARCH ${PROGRAM_ARGUMENTS_TYPE_SEARCH} > run.log
