#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########

#SBATCH --time=4:00:00            # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-350
#SBATCH --mem=4G                    # memory required per node - amount of memory (in bytes)
#SBATCH --job-name tbf-sm         # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab

########## Command Lines to Run ##########

DATA_DIR=/mnt/scratch/lalejini/data/tag-based-mem/reg-cap-evo
CONFIG_DIR=/mnt/scratch/lalejini/data/tag-based-mem/config
EXAMPLES_DIR=/mnt/home/lalejini/devo_ws/gp-tag-accessed-memory/data/prog-synth-examples

##################################
# Setup random seed info
PROBLEM_SEED_OFFSET=1000
SEED=$((SLURM_ARRAY_TASK_ID + PROBLEM_SEED_OFFSET))

##################################
# Problem-specific configuration
PROBLEM=smallest
MAX_PROG_SIZE=64
PROG_EVAL_TIME=64
GENERATIONS=300

MUT_RATE__0005=0005
MUT_RATE__001=001
MUT_RATE__002=002
MUT_RATE__005=005
MUT_RATE__01=01
MUT_RATE__02=02
MUT_RATE__05=05
MUT_RATE__1=1
MUT_RATE__2=2

##################################
# A few utility variables
PROGRAM_ARGUMENT_MODE__TAG_ONLY=0
PROGRAM_ARGUMENT_MODE__NUM_ONLY=1
PROGRAM_ARGUMENT_MODE__TAG_AND_NUM=2

##################################
# Setup general configuration
BENCHMARK_DATA_DIR=${EXAMPLES_DIR}
SNAPSHOT_INTERVAL=${GENERATIONS}
SUMMARY_STATS_INTERVAL=100

PROGRAM_ARGUMENTS_TYPE_SEARCH=0

PROG_POP_SIZE=1000
USE_MODULES=0

PROG_MUT__PER_INST_SUB=0.005
PROG_MUT__PER_INST_INS=0.005
PROG_MUT__PER_INST_DEL=0.005
PROG_MUT__PER_PROG_SLIP=0.05
PROG_MUT__PER_MOD_DUP=0.00
PROG_MUT__PER_MOD_DEL=0.00
PROG_MUT__PER_NUMERIC_ARG_SUB=0.05
PROG_MUT__PER_BIT_FLIP=0.005
PROG_MUT__PER_TAG_RANDOMIZE=0.001

MEM_TAG_INIT_MODE=0
MEM_TAG_MUT__PER_BIT_FLIP=0.00390625

###### Treatments #######

REPLICATES=50

TREATMENT_ID=0

TREATMENT__ARG_MODE_NUM__EVO_REG_TAGS_0__EVO_REG_CAP_0__REG_TAG_DUP_0__REG_TAG_DEL_0__START=$((1+$TREATMENT_ID*$REPLICATES))
TREATMENT__ARG_MODE_NUM__EVO_REG_TAGS_0__EVO_REG_CAP_0__REG_TAG_DUP_0__REG_TAG_DEL_0__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_0__EVO_REG_CAP_0__REG_TAG_DUP_0__REG_TAG_DEL_0__START=$((1+$TREATMENT_ID*$REPLICATES))
TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_0__EVO_REG_CAP_0__REG_TAG_DUP_0__REG_TAG_DEL_0__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_0__REG_TAG_DUP_0__REG_TAG_DEL_0__START=$((1+$TREATMENT_ID*$REPLICATES))
TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_0__REG_TAG_DUP_0__REG_TAG_DEL_0__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_001__REG_TAG_DEL_001__START=$((1+$TREATMENT_ID*$REPLICATES))
TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_001__REG_TAG_DEL_001__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_005__REG_TAG_DEL_005__START=$((1+$TREATMENT_ID*$REPLICATES))
TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_005__REG_TAG_DEL_005__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_01__REG_TAG_DEL_01__START=$((1+$TREATMENT_ID*$REPLICATES))
TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_01__REG_TAG_DEL_01__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_05__REG_TAG_DEL_05__START=$((1+$TREATMENT_ID*$REPLICATES))
TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_05__REG_TAG_DEL_05__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))


####################################################################

if [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__ARG_MODE_NUM__EVO_REG_TAGS_0__EVO_REG_CAP_0__REG_TAG_DUP_0__REG_TAG_DEL_0__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__ARG_MODE_NUM__EVO_REG_TAGS_0__EVO_REG_CAP_0__REG_TAG_DUP_0__REG_TAG_DEL_0__STOP} ] ; then
  ARG_MODE_NAME=NUM
  PROGRAM_ARGUMENT_MODE=${PROGRAM_ARGUMENT_MODE__NUM_ONLY}
  MEM_TAG_EVOLVE=0
  MEM_CAPACITY_EVOLVE=0
  MEM_TAG_MUT__PER_TAG_DUP=0.0
  MEM_TAG_MUT__PER_TAG_DEL=0.0

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_0__EVO_REG_CAP_0__REG_TAG_DUP_0__REG_TAG_DEL_0__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_0__EVO_REG_CAP_0__REG_TAG_DUP_0__REG_TAG_DEL_0__STOP} ] ; then
  ARG_MODE_NAME=TAG
  PROGRAM_ARGUMENT_MODE=${PROGRAM_ARGUMENT_MODE__TAG_ONLY}
  MEM_TAG_EVOLVE=0
  MEM_CAPACITY_EVOLVE=0
  MEM_TAG_MUT__PER_TAG_DUP=0.0
  MEM_TAG_MUT__PER_TAG_DEL=0.0

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_0__REG_TAG_DUP_0__REG_TAG_DEL_0__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_0__REG_TAG_DUP_0__REG_TAG_DEL_0__STOP} ] ; then
  ARG_MODE_NAME=TAG
  PROGRAM_ARGUMENT_MODE=${PROGRAM_ARGUMENT_MODE__TAG_ONLY}
  MEM_TAG_EVOLVE=1
  MEM_CAPACITY_EVOLVE=0
  MEM_TAG_MUT__PER_TAG_DUP=0.0
  MEM_TAG_MUT__PER_TAG_DEL=0.0

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_001__REG_TAG_DEL_001__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_001__REG_TAG_DEL_001__STOP} ] ; then
  ARG_MODE_NAME=TAG
  PROGRAM_ARGUMENT_MODE=${PROGRAM_ARGUMENT_MODE__TAG_ONLY}
  MEM_TAG_EVOLVE=1
  MEM_CAPACITY_EVOLVE=1
  MEM_TAG_MUT__PER_TAG_DUP=0.001
  MEM_TAG_MUT__PER_TAG_DEL=0.001

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_005__REG_TAG_DEL_005__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_005__REG_TAG_DEL_005__STOP} ] ; then
  ARG_MODE_NAME=TAG
  PROGRAM_ARGUMENT_MODE=${PROGRAM_ARGUMENT_MODE__TAG_ONLY}
  MEM_TAG_EVOLVE=1
  MEM_CAPACITY_EVOLVE=1
  MEM_TAG_MUT__PER_TAG_DUP=0.005
  MEM_TAG_MUT__PER_TAG_DEL=0.005

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_01__REG_TAG_DEL_01__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_01__REG_TAG_DEL_01__STOP} ] ; then
  ARG_MODE_NAME=TAG
  PROGRAM_ARGUMENT_MODE=${PROGRAM_ARGUMENT_MODE__TAG_ONLY}
  MEM_TAG_EVOLVE=1
  MEM_CAPACITY_EVOLVE=1
  MEM_TAG_MUT__PER_TAG_DUP=0.01
  MEM_TAG_MUT__PER_TAG_DEL=0.01

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_05__REG_TAG_DEL_05__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__ARG_MODE_TAG__EVO_REG_TAGS_1__EVO_REG_CAP_1__REG_TAG_DUP_05__REG_TAG_DEL_05__STOP} ] ; then
  ARG_MODE_NAME=TAG
  PROGRAM_ARGUMENT_MODE=${PROGRAM_ARGUMENT_MODE__TAG_ONLY}
  MEM_TAG_EVOLVE=1
  MEM_CAPACITY_EVOLVE=1
  MEM_TAG_MUT__PER_TAG_DUP=0.05
  MEM_TAG_MUT__PER_TAG_DEL=0.05

else
  echo "${SEED} from ${PROBLEM} (${NAME}) failed to launch" >> /mnt/home/lalejini/failtolaunch.txt

fi

####################################################################


NAME=ARGS_${ARG_MODE_NAME}__EVO_REG_TAGS_${MEM_TAG_EVOLVE}__EVO_REG_CAP_${MEM_CAPACITY_EVOLVE}__REG_TAG_DUP_RATE__${MEM_TAG_MUT__PER_TAG_DUP}__REG_TAG_DEL_RATE__${MEM_TAG_MUT__PER_TAG_DEL}

RUN_NAME=PROBLEM_${PROBLEM}__${NAME}__${SEED}
RUN_DIR=${DATA_DIR}/${RUN_NAME}

# Make run directory
mkdir -p ${RUN_DIR}

cd ${RUN_DIR}

cp -R ${CONFIG_DIR}/* .

echo "./prog_synth -SEED ${SEED} -PROBLEM ${PROBLEM} -GENERATIONS ${GENERATIONS} -MAX_PROG_SIZE ${MAX_PROG_SIZE} -PROG_EVAL_TIME ${PROG_EVAL_TIME} -PROG_MUT__PER_BIT_FLIP ${PROG_MUT__PER_BIT_FLIP} -PROG_MUT__PER_NUMERIC_ARG_SUB ${PROG_MUT__PER_NUMERIC_ARG_SUB} -BENCHMARK_DATA_DIR ${BENCHMARK_DATA_DIR} -SNAPSHOT_INTERVAL ${SNAPSHOT_INTERVAL} -SUMMARY_STATS_INTERVAL ${SUMMARY_STATS_INTERVAL} -PROG_POP_SIZE ${PROG_POP_SIZE} -USE_MODULES ${USE_MODULES} -PROG_MUT__PER_INST_SUB ${PROG_MUT__PER_INST_SUB} -PROG_MUT__PER_INST_INS ${PROG_MUT__PER_INST_INS} -PROG_MUT__PER_INST_DEL ${PROG_MUT__PER_INST_DEL} -PROG_MUT__PER_PROG_SLIP ${PROG_MUT__PER_PROG_SLIP} -PROG_MUT__PER_MOD_DUP ${PROG_MUT__PER_MOD_DUP} -PROG_MUT__PER_MOD_DEL ${PROG_MUT__PER_MOD_DEL} -PROGRAM_ARGUMENT_MODE ${PROGRAM_ARGUMENT_MODE} -PROGRAM_ARGUMENTS_TYPE_SEARCH ${PROGRAM_ARGUMENTS_TYPE_SEARCH} -PROG_MUT__PER_TAG_RANDOMIZE ${PROG_MUT__PER_TAG_RANDOMIZE} -MEM_TAG_INIT_MODE ${MEM_TAG_INIT_MODE} -MEM_TAG_EVOLVE ${MEM_TAG_EVOLVE} -MEM_TAG_MUT__PER_BIT_FLIP ${MEM_TAG_MUT__PER_BIT_FLIP} -MEM_CAPACITY_EVOLVE ${MEM_CAPACITY_EVOLVE} -MEM_TAG_MUT__PER_TAG_DUP ${MEM_TAG_MUT__PER_TAG_DUP} -MEM_TAG_MUT__PER_TAG_DEL ${MEM_TAG_MUT__PER_TAG_DEL}> run.log" > ./cmd.txt

./prog_synth -SEED ${SEED} -PROBLEM ${PROBLEM} -GENERATIONS ${GENERATIONS} -MAX_PROG_SIZE ${MAX_PROG_SIZE} -PROG_EVAL_TIME ${PROG_EVAL_TIME} -PROG_MUT__PER_BIT_FLIP ${PROG_MUT__PER_BIT_FLIP} -PROG_MUT__PER_NUMERIC_ARG_SUB ${PROG_MUT__PER_NUMERIC_ARG_SUB} -BENCHMARK_DATA_DIR ${BENCHMARK_DATA_DIR} -SNAPSHOT_INTERVAL ${SNAPSHOT_INTERVAL} -SUMMARY_STATS_INTERVAL ${SUMMARY_STATS_INTERVAL} -PROG_POP_SIZE ${PROG_POP_SIZE} -USE_MODULES ${USE_MODULES} -PROG_MUT__PER_INST_SUB ${PROG_MUT__PER_INST_SUB} -PROG_MUT__PER_INST_INS ${PROG_MUT__PER_INST_INS} -PROG_MUT__PER_INST_DEL ${PROG_MUT__PER_INST_DEL} -PROG_MUT__PER_PROG_SLIP ${PROG_MUT__PER_PROG_SLIP} -PROG_MUT__PER_MOD_DUP ${PROG_MUT__PER_MOD_DUP} -PROG_MUT__PER_MOD_DEL ${PROG_MUT__PER_MOD_DEL} -PROGRAM_ARGUMENT_MODE ${PROGRAM_ARGUMENT_MODE} -PROGRAM_ARGUMENTS_TYPE_SEARCH ${PROGRAM_ARGUMENTS_TYPE_SEARCH} -PROG_MUT__PER_TAG_RANDOMIZE ${PROG_MUT__PER_TAG_RANDOMIZE} -MEM_TAG_INIT_MODE ${MEM_TAG_INIT_MODE} -MEM_TAG_EVOLVE ${MEM_TAG_EVOLVE} -MEM_TAG_MUT__PER_BIT_FLIP ${MEM_TAG_MUT__PER_BIT_FLIP} -MEM_CAPACITY_EVOLVE ${MEM_CAPACITY_EVOLVE} -MEM_TAG_MUT__PER_TAG_DUP ${MEM_TAG_MUT__PER_TAG_DUP} -MEM_TAG_MUT__PER_TAG_DEL ${MEM_TAG_MUT__PER_TAG_DEL}> run.log